package com.reyurnible.view;import com.reyurnible.tabemon.R;import android.annotation.SuppressLint;import android.app.Dialog;import android.app.DialogFragment;import android.graphics.Color;import android.graphics.drawable.ColorDrawable;import android.os.Bundle;import android.view.View;import android.view.View.OnClickListener;import android.view.WindowManager;import android.widget.Button;import android.widget.TextView;public class CustomDialogFragment extends DialogFragment implements OnClickListener{    	private Button positiveButton;	private Button closeButton;	private TextView titleText;	private TextView messageText;	private String title=null;	private String message=null;		private CustomDialogCallback callback=null;		public CustomDialogFragment(String title,String message){		 this.title = title;		 this.message = message;	}	public void setCallBack(CustomDialogCallback callback){		this.callback = callback;	}    @Override    public Dialog onCreateDialog(Bundle savedInstanceState) {        Dialog dialog = new Dialog(getActivity());        // フルスクリーン        dialog.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_LAYOUT_IN_SCREEN);        dialog.setContentView(R.layout.fragment_dialog);        // 背景を透明にする        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));        positiveButton = (Button)dialog.findViewById(R.id.positive_button);        positiveButton.setOnClickListener(this);        closeButton = (Button)dialog.findViewById(R.id.close_button);        closeButton.setOnClickListener(this);        //文字のセット        if(title!=null){        	titleText = (TextView)dialog.findViewById(R.id.title);            titleText.setText(title);	        }        if(message!=null){        	messageText = (TextView)dialog.findViewById(R.id.message);            messageText.setText(message);        }        return dialog;    }	@Override	public void onClick(View v) {		switch(v.getId()){		case R.id.positive_button:			if(callback!=null){				callback.onClickedPositiveButton();			}			dismiss();			break;		case R.id.close_button:			if(callback!=null){				callback.onClickedCloseButton();			}			dismiss();			break;		}	}}